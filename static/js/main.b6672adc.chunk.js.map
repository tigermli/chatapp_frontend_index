{"version":3,"sources":["components/LoginModal/index.js","components/MessageList/index.js","components/SendUserMessage/index.js","components/UserList/index.js","components/Chat/index.js","App.js","reportWebVitals.js","index.js"],"names":["LoginModal","props","useState","URL","setURL","username","setUsername","password","setPassword","disableChat","className","onSubmit","e","preventDefault","loginURL","data","FormData","append","fetch","method","body","then","response","ok","json","Error","status","sessionStorage","token","url","onSetDisableChat","catch","console","log","alert","placeholder","value","onChange","event","target","type","MessageList","hashCode","s","i","h","length","Math","imul","charCodeAt","abs","entireMessageList","messages","map","message","id","src","window","location","origin","width","height","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","scrollToBottom","ref","SendUserMessage","setMessage","messageURL","headers","Headers","getItem","err","disabled","UserList","usersList","Array","from","activeUsers","sort","user","Chat","Set","users","setUsers","setMessages","onEventArrival","arr","formatTime","timeCreated","t","Date","toLocaleDateString","toLocaleTimeString","stream","EventSource","addEventListener","JSON","parse","payload","created","close","set","oldSet","delete","removeFromUsers","newSet","add","addToUsers","App","setDisableChat","childSetDisableChat","clear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6672adc.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport './style.css'\n\nconst LoginModal = (props) => {\n    const [URL, setURL] = useState('https:chat.cs291.com')\n    const [username, setUsername] = useState('thor')\n    const [password, setPassword] = useState('password')\n\n    function tryLogin(e) {\n        e.preventDefault();\n        let loginURL = URL + '/login'\n\n        let data = new FormData();\n        data.append('username', username);\n        data.append('password', password);\n        \n        fetch(loginURL, {\n            method: 'POST',\n            body: data\n        }).then(function(response) {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(response.status);\n            }\n        }).then(function(body) {\n            sessionStorage.token = body['token'];\n            sessionStorage.url = URL;\n\n            props.onSetDisableChat(false);\n        }).catch((status) => {\n            console.log(status)\n            if (status == 'Error: 403') {\n                alert('Invalid username or password');\n            }\n            if (status == 'Error: 422') {\n                alert(status + \" failure to /login\");\n            }\n        });\n    };\n\n    if (props.disableChat) {\n        return (\n            <div className=\"loginBody\">\n                <div className=\"loginContainer\">\n                    <h1 className='loginTitle'> DOGE Chat </h1> <br />\n                    <form className='loginForm' onSubmit={tryLogin}>\n                        <input placeholder='URL' className='loginInput' value={URL} onChange={(event) => setURL(event.target.value)} /><br/>\n                        <input placeholder='username' className='loginInput' onChange={(event) => setUsername(event.target.value)} /><br/>\n                        <input placeholder='password' type='password' className='loginInput' onChange={(event) => setPassword(event.target.value)} /><br/>\n                    \n                        <button className='submit' type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default LoginModal\n","import React, {useEffect, useRef} from \"react\";\nimport './style.css'\n\nconst MessageList = (props) => {\n\n    // hash function taken from here https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0\n    function hashCode(s) {\n        for(var i = 0, h = 0; i < s.length; i++)\n            h = Math.imul(31, h) + s.charCodeAt(i) | 0;\n        return Math.abs(h);\n    }\n\n    const entireMessageList = props.messages.map((message, id) => {\n        return (\n            <div key={id}>\n                {message['isMessage'] && <img src={window.location.origin+`/profiles/doge${hashCode(message['user'])%9+1}.jpg`} width=\"30\" height=\"30\"></img>}\n                {!message['isMessage'] && <img src={window.location.origin+'/profiles/noDoge.png'} width=\"30\" height=\"30\"></img>}\n                {message['str']}\n            </div>\n        )\n    });\n\n    // scroll to bottom automatically\n    const messagesEndRef = useRef(null)\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n    useEffect(() => {\n        scrollToBottom()\n    }, [props]);\n\n    return (\n        <div className=\"messageListContainer\">\n            {entireMessageList}\n            <div ref={messagesEndRef} />\n        </div>\n    )\n}\n\nexport default MessageList\n","import React, {useState} from \"react\";\nimport './style.css'\n\nconst SendUserMessage = (props) => {\n    const [message, setMessage] = useState('')\n    \n    function onSendMessage(e) {\n        e.preventDefault();\n        const messageURL = props.url + '/message'\n\n        console.log(messageURL)\n        \n        let data = new FormData();\n        data.append(\"message\", message)\n\n        fetch(messageURL, {\n            method: 'POST',\n            headers: new Headers({\"Authorization\": \"Bearer \" + sessionStorage.getItem('token')}),\n            body: data\n        }).then(function(response) {\n            let status = response.status\n            if (status === 422) {\n                alert('Please send a nonempty message')\n            }\n            else if (status === 201) {\n                setMessage('')\n            }\n            console.log(\"Token is: \" + sessionStorage.getItem('token'))\n            console.log(response);\n        }).catch( err => {\n            console.log(\"IN ERROR STATE\")\n            console.log(err);\n        });\n\n    };\n\n    return (\n        <form className=\"message_form\" onSubmit={onSendMessage}>\n            <input \n                className = \"messageInput\"\n                placeholder=\"Type message here and press ENTER to send.\"\n                type=\"text\"\n                value={message}\n                onChange={(event) => {setMessage(event.target.value)}}\n                disabled={props.disabled} />\n        </form>\n    )\n}\n\nexport default SendUserMessage\n","import React from \"react\";\nimport './style.css'\n\nconst UserList = (props) => {\n\n    // hash function taken from here https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0\n    function hashCode(s) {\n        for(var i = 0, h = 0; i < s.length; i++)\n            h = Math.imul(31, h) + s.charCodeAt(i) | 0;\n        return Math.abs(h);\n    }\n\n    const orderedUsers = Array.from(props.activeUsers).sort()\n    const usersList = orderedUsers.map((user, id) => {\n        return (\n            <div key={id}>\n                <img src={window.location.origin+`/profiles/doge${hashCode(user)%9+1}.jpg`} width=\"30\" height=\"30\"></img>\n                <div className='userItem' key={id}>{user}</div>\n            </div>\n        )\n    });\n\n    return (\n        <div className=\"userListContainer\" >\n            <div className=\"userList\">\n                {usersList}\n            </div>\n        </div>\n    )\n}\n\nexport default UserList\n","import React, {useEffect, useState} from \"react\";\nimport './style.css'\nimport '../SendUserMessage/style.css';\nimport '../UserList/style.css';\nimport MessageList from '../MessageList/index.js';\nimport SendUserMessage from '../SendUserMessage/index.js';\nimport UserList from '../UserList/index.js';\n\nconst Chat = (props) => {\n    const [users, setUsers] = useState(new Set())\n    const [messages, setMessages] = useState([])\n    \n    function onEventArrival(event) {\n        setMessages(arr => [...arr, event]);\n    };\n\n    function addToUsers(event) {\n        setUsers((set) => {\n            let newSet = new Set(set);\n            newSet.add(event);\n            return newSet;\n        });\n    };\n\n    function removeFromUsers(event) {\n        setUsers((set) => {\n            let oldSet = new Set(set);\n            oldSet.delete(event);\n            return oldSet;\n        });\n    };\n\n    function formatTime(timeCreated) {\n        var t = new Date(timeCreated * 1000);\n        var formatted = t.toLocaleDateString(\"en-US\") + \" \" + t.toLocaleTimeString(\"en-US\")\n        return formatted\n    };\n\n    useEffect(() => {\n        if (!props.disableChat) {\n            let stream = new EventSource(\n                sessionStorage.getItem('url') + \"/stream/\" + sessionStorage.getItem('token')\n            );\n\n            // done\n            stream.addEventListener(\n                \"Users\",\n                function(event) {\n                    setUsers(new Set(JSON.parse(event.data).users));                    \n                },\n                false\n            );\n\n            stream.addEventListener(\n                \"Message\",\n                function(event) {\n                    let payload = JSON.parse(event.data)\n                    const formattedTime = formatTime(payload.created)\n                    onEventArrival({\n                        \"str\": formattedTime + \" (\" + payload.user + \") \" + payload.message,\n                        \"user\": payload.user,\n                        \"isMessage\": true\n                    })\n                },\n                false\n            );\n\n            // done\n            stream.addEventListener(\n                \"Disconnect\",\n                function(event) {\n                    stream.close()\n                    props.onSetDisableChat(true)\n                },\n                false\n            );\n\n            // done\n            stream.addEventListener(\n                \"ServerStatus\",\n                function(event) {\n                    let payload = JSON.parse(event.data)\n                    const formattedTime = formatTime(payload.created)\n                    \n                    onEventArrival({\n                        \"str\": formattedTime + \" STATUS: \" + payload.status,\n                        \"isMessage\": false\n                    })\n                },\n                false\n            );\n\n            // done\n            stream.addEventListener(\n                \"Part\",\n                function(event) {\n                    let payload = JSON.parse(event.data);\n\n                    const formattedTime = formatTime(payload.created);\n                    onEventArrival({\n                        \"str\": formattedTime + \" PART: \" + payload.user,\n                        \"isMessage\": true,\n                        \"user\": payload.user\n                    })\n                    removeFromUsers(payload.user);                    \n                },\n                false\n            );\n\n            // done\n            stream.addEventListener(\n                \"Join\",\n                function(event) {\n                    let payload = JSON.parse(event.data);\n\n                    const formattedTime = formatTime(payload.created);\n                    onEventArrival({\n                        \"str\": formattedTime + \" JOIN: \" + payload.user,\n                        \"isMessage\": true,\n                        \"user\": payload.user\n                    })\n                    addToUsers(payload.user);\n                },\n                false\n            );\n        }\n\n        console.log('visited effect')\n    }, [props.disableChat]);\n\n\n    if (!props.disableChat) {\n        return (\n            <div className = \"chat\">\n                <div className=\"leftContainer\">\n                    <MessageList messages={[...messages]}/>\n                    <SendUserMessage\n                        url={sessionStorage.getItem(\"url\")}\n                        disabled={props.disableChat} />\n                </div>\n                <UserList activeUsers={users}/>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Chat\n","// import logo from './logo.svg';\nimport './App.css'\nimport './components/Chat/style.css';\nimport './components/SendUserMessage/style.css';\nimport './components/UserList/style.css';\nimport React, {useEffect, useState} from \"react\";\nimport LoginModal from './components/LoginModal/index.js'\nimport Chat from './components/Chat/index.js';\n\nconst App = () => {\n    const [disableChat, setDisableChat] = useState(true)\n\n    // check for duplicate case\n    useEffect(()=>{\n        if (sessionStorage.getItem('token') !== null) {\n            setDisableChat(false);\n        }\n    }, []);\n\n    // wipe session storage on reload\n    window.addEventListener('unload', function(event) {\n        sessionStorage.clear();\n    });\n\n    function childSetDisableChat(value) {\n        setDisableChat(value)\n    }\n\n    return (\n        <div>\n            {/* <div class=\"header\">\n                <h1>DogeChat</h1>\n            </div> */}\n            <LoginModal\n                disableChat={disableChat}\n                onSetDisableChat={childSetDisableChat} />\n            <Chat\n                disableChat={disableChat}\n                onSetDisableChat={childSetDisableChat} />\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}