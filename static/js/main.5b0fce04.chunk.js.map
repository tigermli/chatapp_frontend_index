{"version":3,"sources":["components/LoginModal/index.js","components/MessageList/index.js","components/SendUserMessage/index.js","components/UserList/index.js","components/Chat/index.js","App.js","reportWebVitals.js","index.js"],"names":["LoginModal","props","useState","URL","setURL","username","setUsername","password","setPassword","disableChat","className","onSubmit","e","preventDefault","loginURL","data","FormData","append","fetch","method","body","then","response","ok","json","Error","status","sessionStorage","token","url","onSetDisableChat","catch","console","log","alert","htmlFor","placeholder","value","onChange","event","target","type","MessageList","entireMessageList","messages","map","message","id","SendUserMessage","setMessage","messageURL","headers","Headers","getItem","err","disabled","UserList","usersList","Array","from","activeUsers","sort","user","Chat","Set","users","setUsers","setMessages","onEventArrival","arr","formatTime","timeCreated","t","Date","toLocaleDateString","toLocaleTimeString","useEffect","stream","EventSource","addEventListener","JSON","parse","created","close","payload","set","oldSet","delete","removeFromUsers","newSet","add","addToUsers","App","setDisableChat","childSetDisableChat","window","clear","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTA8DeA,G,2BA3DI,SAACC,GAAW,IAAD,EACJC,mBAAS,yBADL,mBACnBC,EADmB,KACdC,EADc,OAEMF,mBAAS,IAFf,mBAEnBG,EAFmB,KAETC,EAFS,OAGMJ,mBAAS,IAHf,mBAGnBK,EAHmB,KAGTC,EAHS,KAsC1B,OAAIP,EAAMQ,YAEF,sBAAKC,UAAU,iBAAf,UACI,oBAAIA,UAAU,aAAd,qBADJ,IAC4C,uBACxC,uBAAMA,UAAU,YAAYC,SArCxC,SAAkBC,GACdA,EAAEC,iBACF,IAAIC,EAAWX,EAAM,SAEjBY,EAAO,IAAIC,SACfD,EAAKE,OAAO,WAAYZ,GACxBU,EAAKE,OAAO,WAAYV,GAExBW,MAAMJ,EAAU,CACZK,OAAQ,OACRC,KAAML,IACPM,MAAK,SAASC,GACb,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMH,EAASI,WAE9BL,MAAK,SAASD,GACbO,eAAeC,MAAQR,EAAI,MAC3BO,eAAeE,IAAM1B,EAErBF,EAAM6B,kBAAiB,MACxBC,OAAM,SAACL,GACNM,QAAQC,IAAIP,GACE,cAAVA,GACAQ,MAAM,gCAEI,cAAVR,GACAQ,MAAMR,EAAS,0BASf,UACI,uBAAOS,QAAQ,MAAf,kBAAiC,uBACjC,uBAAOC,YAAY,MAAM1B,UAAU,aAAa2B,MAAOlC,EAAKmC,SAAU,SAACC,GAAD,OAAWnC,EAAOmC,EAAMC,OAAOH,UAAU,uBAC/G,uBAAOF,QAAQ,WAAf,uBAA2C,uBAC3C,uBAAOC,YAAY,WAAW1B,UAAU,aAAa4B,SAAU,SAACC,GAAD,OAAWjC,EAAYiC,EAAMC,OAAOH,UAAU,uBAC7G,uBAAOF,QAAQ,WAAf,uBAA2C,uBAC3C,uBAAOC,YAAY,WAAWK,KAAK,WAAW/B,UAAU,aAAa4B,SAAU,SAACC,GAAD,OAAW/B,EAAY+B,EAAMC,OAAOH,UAAU,uBAE7H,wBAAQI,KAAK,SAAb,0BAKL,O,OC3CAC,G,MAZK,SAACzC,GACjB,IAAM0C,EAAoB1C,EAAM2C,SAASC,KAAI,SAACC,EAASC,GACnD,OAAO,8BAAeD,GAALC,MAGrB,OACI,qBAAKrC,UAAU,uBAAf,SACKiC,MCsCEK,EA7CS,SAAC/C,GAAW,IAAD,EACDC,mBAAS,IADR,mBACxB4C,EADwB,KACfG,EADe,KAiC/B,OACI,sBAAMvC,UAAU,eAAeC,SA/BnC,SAAuBC,GACnBA,EAAEC,iBACF,IAAMqC,EAAajD,EAAM4B,IAAM,WAE/BG,QAAQC,IAAIiB,GAEZ,IAAInC,EAAO,IAAIC,SACfD,EAAKE,OAAO,UAAW6B,GAEvB5B,MAAMgC,EAAY,CACd/B,OAAQ,OACRgC,QAAS,IAAIC,QAAQ,CAAC,cAAiB,UAAYzB,eAAe0B,QAAQ,WAC1EjC,KAAML,IACPM,MAAK,SAASC,GACb,IAAII,EAASJ,EAASI,OACP,MAAXA,EACAQ,MAAM,kCAEU,MAAXR,GACLuB,EAAW,IAEfjB,QAAQC,IAAI,aAAeN,eAAe0B,QAAQ,UAClDrB,QAAQC,IAAIX,MACbS,OAAO,SAAAuB,GACNtB,QAAQC,IAAI,kBACZD,QAAQC,IAAIqB,OAMhB,SACI,uBACIlB,YAAY,6CACZK,KAAK,OACLJ,MAAOS,EACPR,SAAU,SAACC,GAAWU,EAAWV,EAAMC,OAAOH,QAC9CkB,SAAUtD,EAAMsD,cCxBjBC,EAhBE,SAACvD,GACd,IACMwD,EADeC,MAAMC,KAAK1D,EAAM2D,aAAaC,OACpBhB,KAAI,SAACiB,EAAMf,GACtC,OAAO,6BAAce,GAALf,MAGpB,OACI,sBAAKrC,UAAU,oBAAf,UACI,oBAAIA,UAAU,gBAAd,4BACI,oBAAIA,UAAU,WAAd,SACK+C,QC2HNM,EAhIF,SAAC9D,GAAW,IAAD,EACMC,mBAAS,IAAI8D,KADnB,mBACbC,EADa,KACNC,EADM,OAEYhE,mBAAS,IAFrB,mBAEb0C,EAFa,KAEHuB,EAFG,KAIpB,SAASC,EAAe7B,GACpB4B,GAAY,SAAAE,GAAG,4BAAQA,GAAR,CAAa9B,OAmBhC,SAAS+B,EAAWC,GAChB,IAAIC,EAAI,IAAIC,KAAmB,IAAdF,GAEjB,OADgBC,EAAEE,mBAAmB,SAAW,IAAMF,EAAEG,mBAAmB,SAuF/E,OAnFAC,qBAAU,WACN5C,QAAQC,IAAI,gBACZD,QAAQC,IAAIgC,KACb,CAACA,IAEJW,qBAAU,WACN,IAAK3E,EAAMQ,YAAa,CACpB,IAAIoE,EAAS,IAAIC,YACbnD,eAAe0B,QAAQ,OAAS,WAAa1B,eAAe0B,QAAQ,UAIxEwB,EAAOE,iBACH,SACA,SAASxC,GACL2B,EAAS,IAAIF,IAAIgB,KAAKC,MAAM1C,EAAMxB,MAAMkD,WAE5C,GAGJY,EAAOE,iBACH,WACA,SAASxC,GAEL6B,EADsBE,EAAWU,KAAKC,MAAM1C,EAAMxB,MAAMmE,SACzB,KAAOF,KAAKC,MAAM1C,EAAMxB,MAAM+C,KAAO,KAAOkB,KAAKC,MAAM1C,EAAMxB,MAAM+B,SAClGd,QAAQC,IAAI+C,KAAKC,MAAM1C,EAAMxB,UAEjC,GAIJ8D,EAAOE,iBACH,cACA,SAASxC,GACLsC,EAAOM,QACPlF,EAAM6B,kBAAiB,GACvBE,QAAQC,IAAI+C,KAAKC,MAAM1C,EAAMxB,UAEjC,GAIJ8D,EAAOE,iBACH,gBACA,SAASxC,GAEL6B,EADsBE,EAAWU,KAAKC,MAAM1C,EAAMxB,MAAMmE,SACzB,YAAcF,KAAKC,MAAM1C,EAAMxB,MAAMW,QACpEM,QAAQC,IAAI+C,KAAKC,MAAM1C,EAAMxB,UAEjC,GAIJ8D,EAAOE,iBACH,QACA,SAASxC,GACL,IAAI6C,EAAUJ,KAAKC,MAAM1C,EAAMxB,MAG/BqD,EADsBE,EAAWc,EAAQF,SACV,UAAYE,EAAQtB,MAzEnE,SAAyBvB,GACrB2B,GAAS,SAACmB,GACN,IAAIC,EAAS,IAAItB,IAAIqB,GAErB,OADAC,EAAOC,OAAOhD,GACP+C,KAsECE,CAAgBJ,EAAQtB,SAE5B,GAIJe,EAAOE,iBACH,QACA,SAASxC,GACL,IAAI6C,EAAUJ,KAAKC,MAAM1C,EAAMxB,MAG/BqD,EADsBE,EAAWc,EAAQF,SACV,UAAYE,EAAQtB,MA9FnE,SAAoBvB,GAChB2B,GAAS,SAACmB,GACN,IAAII,EAAS,IAAIzB,IAAIqB,GAErB,OADAI,EAAOC,IAAInD,GACJkD,KA2FCE,CAAWP,EAAQtB,SAEvB,GAIR9B,QAAQC,IAAI,oBACb,CAAChC,EAAMQ,cAGLR,EAAMQ,YAWA,KATH,sBAAKC,UAAY,OAAjB,UACI,cAAC,EAAD,CAAUkD,YAAaK,IACvB,cAAC,EAAD,CAAarB,SAAQ,YAAMA,KAC3B,cAAC,EAAD,CACIf,IAAKF,eAAe0B,QAAQ,OAC5BE,SAAUtD,EAAMQ,kBCrFrBmF,EAlCH,WAAO,IAAD,EACwB1F,oBAAS,GADjC,mBACPO,EADO,KACMoF,EADN,KAed,SAASC,EAAoBzD,GACzBwD,EAAexD,GAGnB,OAfAuC,qBAAU,WACkC,OAApCjD,eAAe0B,QAAQ,UACvBwC,GAAe,KAEpB,IAGHE,OAAOhB,iBAAiB,UAAU,SAASxC,GACvCZ,eAAeqE,WAQf,sBAAKtF,UAAU,MAAf,UACI,qBAAKuF,MAAM,SAAX,SACI,4CAEJ,cAAC,EAAD,CACIxF,YAAaA,EACbqB,iBAAkBgE,IACtB,cAAC,EAAD,CACIrF,YAAaA,EACbqB,iBAAkBgE,QC1BnBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/E,MAAK,YAAkD,IAA/CgF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5b0fce04.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport './style.css'\n\nconst LoginModal = (props) => {\n    const [URL, setURL] = useState('http://localhost:2000')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    function tryLogin(e) {\n        e.preventDefault();\n        let loginURL = URL + '/login'\n\n        let data = new FormData();\n        data.append('username', username);\n        data.append('password', password);\n        \n        fetch(loginURL, {\n            method: 'POST',\n            body: data\n        }).then(function(response) {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(response.status);\n            }\n        }).then(function(body) {\n            sessionStorage.token = body['token'];\n            sessionStorage.url = URL;\n\n            props.onSetDisableChat(false);\n        }).catch((status) => {\n            console.log(status)\n            if (status == 'Error: 403') {\n                alert('Invalid username or password');\n            }\n            if (status == 'Error: 422') {\n                alert(status + \" failure to /login\");\n            }\n        });\n    };\n\n    if (props.disableChat) {\n        return (\n            <div className=\"loginContainer\">\n                <h1 className='loginTitle'> Login </h1> <br />\n                <form className='loginform' onSubmit={tryLogin}>\n                    <label htmlFor=\"URL\">URL:</label><br/>\n                    <input placeholder='URL' className='loginInput' value={URL} onChange={(event) => setURL(event.target.value)} /><br/>\n                    <label htmlFor=\"username\">Username:</label><br/>\n                    <input placeholder='username' className='loginInput' onChange={(event) => setUsername(event.target.value)} /><br/>\n                    <label htmlFor=\"password\">Password:</label><br/>\n                    <input placeholder='password' type='password' className='loginInput' onChange={(event) => setPassword(event.target.value)} /><br/>\n                \n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default LoginModal\n","import React, {useState} from \"react\";\nimport './style.css'\n\nconst MessageList = (props) => {\n    const entireMessageList = props.messages.map((message, id) => {\n        return <div key={id}>{message}</div>\n    });\n\n    return (\n        <div className=\"messageListContainer\">\n            {entireMessageList}\n        </div>\n    )\n}\n\nexport default MessageList\n","import React, {useState} from \"react\";\nimport './style.css'\n\nconst SendUserMessage = (props) => {\n    const [message, setMessage] = useState('')\n    \n    function onSendMessage(e) {\n        e.preventDefault();\n        const messageURL = props.url + '/message'\n\n        console.log(messageURL)\n        \n        let data = new FormData();\n        data.append(\"message\", message)\n\n        fetch(messageURL, {\n            method: 'POST',\n            headers: new Headers({\"Authorization\": \"Bearer \" + sessionStorage.getItem('token')}),\n            body: data\n        }).then(function(response) {\n            let status = response.status\n            if (status === 422) {\n                alert('Please send a nonempty message')\n            }\n            else if (status === 201) {\n                setMessage('')\n            }\n            console.log(\"Token is: \" + sessionStorage.getItem('token'))\n            console.log(response);\n        }).catch( err => {\n            console.log(\"IN ERROR STATE\")\n            console.log(err);\n        });\n\n    };\n\n    return (\n        <form className=\"send-message\" onSubmit={onSendMessage}>\n            <input \n                placeholder=\"Type message here and press ENTER to send.\"\n                type=\"text\"\n                value={message}\n                onChange={(event) => {setMessage(event.target.value)}}\n                disabled={props.disabled} />\n        </form>\n    )\n}\n\nexport default SendUserMessage\n","import React, {useState} from \"react\";\nimport './style.css'\n\nconst UserList = (props) => {\n    const orderedUsers = Array.from(props.activeUsers).sort()\n    const usersList = orderedUsers.map((user, id) => {\n        return <li key={id}>{user}</li>\n    });\n\n    return (\n        <div className=\"userListContainer\" >\n            <h2 className='UserListTitle'> Active Users </h2>\n                <ul className=\"userList\">\n                    {usersList}\n                </ul>\n        </div>\n    )\n}\n\nexport default UserList\n","import React, {useEffect, useState} from \"react\";\nimport './style.css'\nimport '../SendUserMessage/style.css';\nimport '../UserList/style.css';\nimport MessageList from '../MessageList/index.js';\nimport SendUserMessage from '../SendUserMessage/index.js';\nimport UserList from '../UserList/index.js';\n\nconst Chat = (props) => {\n    const [users, setUsers] = useState(new Set())\n    const [messages, setMessages] = useState([])\n    \n    function onEventArrival(event) {\n        setMessages(arr => [...arr, event]);\n    };\n\n    function addToUsers(event) {\n        setUsers((set) => {\n            let newSet = new Set(set);\n            newSet.add(event);\n            return newSet;\n        });\n    };\n\n    function removeFromUsers(event) {\n        setUsers((set) => {\n            let oldSet = new Set(set);\n            oldSet.delete(event);\n            return oldSet;\n        });\n    };\n\n    function formatTime(timeCreated) {\n        var t = new Date(timeCreated * 1000);\n        var formatted = t.toLocaleDateString(\"en-US\") + \" \" + t.toLocaleTimeString(\"en-US\")\n        return formatted\n    };\n\n    useEffect(() => {\n        console.log('edited users')\n        console.log(users)\n    }, [users]);\n\n    useEffect(() => {\n        if (!props.disableChat) {\n            let stream = new EventSource(\n                sessionStorage.getItem('url') + \"/stream/\" + sessionStorage.getItem('token')\n            );\n\n            // done\n            stream.addEventListener(\n                \"Users\",\n                function(event) {\n                    setUsers(new Set(JSON.parse(event.data).users));                    \n                },\n                false\n            );\n\n            stream.addEventListener(\n                \"Message\",\n                function(event) {\n                    const formattedTime = formatTime(JSON.parse(event.data).created)\n                    onEventArrival(formattedTime + \" (\" + JSON.parse(event.data).user + \") \" + JSON.parse(event.data).message)\n                    console.log(JSON.parse(event.data))\n                },\n                false\n            );\n\n            // done\n            stream.addEventListener(\n                \"Disconnect\",\n                function(event) {\n                    stream.close()\n                    props.onSetDisableChat(true)\n                    console.log(JSON.parse(event.data))\n                },\n                false\n            );\n\n            // done\n            stream.addEventListener(\n                \"ServerStatus\",\n                function(event) {\n                    const formattedTime = formatTime(JSON.parse(event.data).created)\n                    onEventArrival(formattedTime + \" STATUS: \" + JSON.parse(event.data).status)\n                    console.log(JSON.parse(event.data))\n                },\n                false\n            );\n\n            // done\n            stream.addEventListener(\n                \"Part\",\n                function(event) {\n                    let payload = JSON.parse(event.data);\n\n                    const formattedTime = formatTime(payload.created);\n                    onEventArrival(formattedTime + \" PART: \" + payload.user);\n                    removeFromUsers(payload.user);                    \n                },\n                false\n            );\n\n            // done\n            stream.addEventListener(\n                \"Join\",\n                function(event) {\n                    let payload = JSON.parse(event.data);\n\n                    const formattedTime = formatTime(payload.created);\n                    onEventArrival(formattedTime + \" JOIN: \" + payload.user);\n                    addToUsers(payload.user);\n                },\n                false\n            );\n        }\n\n        console.log('visited effect')\n    }, [props.disableChat]);\n\n\n    if (!props.disableChat) {\n        return (\n            <div className = \"chat\">\n                <UserList activeUsers={users}/>\n                <MessageList messages={[...messages]}/>\n                <SendUserMessage\n                    url={sessionStorage.getItem(\"url\")}\n                    disabled={props.disableChat} />\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Chat\n","// import logo from './logo.svg';\nimport './App.css'\nimport './components/Chat/style.css';\nimport './components/SendUserMessage/style.css';\nimport './components/UserList/style.css';\nimport React, {useEffect, useState} from \"react\";\nimport LoginModal from './components/LoginModal/index.js'\nimport Chat from './components/Chat/index.js';\n\nconst App = () => {\n    const [disableChat, setDisableChat] = useState(true)\n\n    // check for duplicate case\n    useEffect(()=>{\n        if (sessionStorage.getItem('token') !== null) {\n            setDisableChat(false);\n        }\n    }, []);\n\n    // wipe session storage on reload\n    window.addEventListener('unload', function(event) {\n        sessionStorage.clear();\n    });\n\n    function childSetDisableChat(value) {\n        setDisableChat(value)\n    }\n\n    return (\n        <div className=\"App\">\n            <div class=\"header\">\n                <h1>DogeChat</h1>\n            </div>\n            <LoginModal\n                disableChat={disableChat}\n                onSetDisableChat={childSetDisableChat} />\n            <Chat\n                disableChat={disableChat}\n                onSetDisableChat={childSetDisableChat} />\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}